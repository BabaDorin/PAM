@page "/add"
@using Laborator_2_Medication_Planner.Models
@inject MedicationService MedService
@inject NavigationManager Navigation

<h3 class="text-center mt-4">Adauga un medicament</h3>

<div class="form-group mx-auto">
    <label>Denumire</label>
    <input class="form-control" @bind="medication.Name" />

    <label class="mt-2">Doza</label>
    <input class="form-control" @bind="medication.Dosage" />

    <label class="mt-2">Data</label>
    <input type="date" class="form-control" @bind-value="date" @bind-value:event="oninput" />

    <label class="mt-2">Ora</label>
    <input type="time" class="form-control" @bind-value="time" @bind-value:event="oninput" />

    <div class="form-check mt-3">
        <input class="form-check-input" type="checkbox" id="repeatCheck" @bind="repeatEnabled" />
        <label class="form-check-label" for="repeatCheck">Auto-planifica pentru mai multe zile</label>
    </div>

    @if (repeatEnabled)
    {
            <label class="mt-2">Numar de zile</label>
            <input type="number" class="form-control" min="1" @bind="repeatDays" />
    }

    <button class="btn btn-success mt-4 w-100" @onclick="SaveAsync">Salveaza</button>
</div>

@code {
    private Medication medication = new();
    private DateOnly date = DateOnly.FromDateTime(DateTime.Today);
    private TimeOnly time = TimeOnly.FromDateTime(DateTime.Now.AddMinutes(5));

    private bool repeatEnabled = false;
    private int repeatDays = 1;

    private async Task SaveAsync()
    {
        var scheduledDateTime = date.ToDateTime(time);
        medication.Time = scheduledDateTime;

        if (repeatEnabled && repeatDays > 1)
        {
            MedService.AddMedicationSeries(medication, repeatDays);
        }
        else
        {
            MedService.AddMedication(medication);
        }

        await Task.Delay(100); // brief delay to ensure UI refresh
        Navigation.NavigateTo("/");
    }
}